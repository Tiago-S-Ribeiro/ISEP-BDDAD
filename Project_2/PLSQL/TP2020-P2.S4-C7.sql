-- IGNORAMOS O NUM DE PESSOAS
CREATE OR REPLACE FUNCTION FNCDISPONIBILIDADERESERVA(P_TIPOQUARTO NUMBER, P_DATA DATE, P_DURACAO NUMBER, P_NUMPESSOAS
    NUMBER)
    RETURN
        BOOLEAN IS
    TIPOQUARTO_INVALIDO EXCEPTION;
    DATA_INVALIDA EXCEPTION;
    DURACAO_INVALIDA EXCEPTION;
    AUX_DATA_FIM           DATE;
    AUX_ID_QUARTO_POSSIVEL NUMBER;
    AUX_ID_RESERVA_ITERAR  NUMBER;
    C_QUARTOS              SYS_REFCURSOR;
    C_RESERVAS             SYS_REFCURSOR;
    AUX_QUARTOS            NUMBER;
    AUX_RESERVAS           NUMBER;
    AUX_LOOP               NUMBER;
BEGIN

    -- VERIFICA AS EXCECOES PARA OS PARAMETROS INSERIDOS;
    IF (P_TIPOQUARTO <> 1 AND P_TIPOQUARTO <> 2 AND P_TIPOQUARTO <> 3) THEN
        RAISE TIPOQUARTO_INVALIDO;
    ELSIF P_DATA < SYSDATE THEN
        RAISE DATA_INVALIDA;
    ELSIF P_DURACAO <= 0 THEN
        RAISE DURACAO_INVALIDA;
    ELSIF (P_TIPOQUARTO IS NULL OR P_DATA IS NULL OR P_DURACAO IS NULL) THEN
        RAISE NO_DATA_FOUND;
    END IF;

    -- INICIAR OS CONTADORES A 0
    AUX_RESERVAS := 0;
    AUX_QUARTOS := 0;

    -- COLOCA NO CURSOR C_QUARTOS TODOS OS QUARTOS QUE CORRESPONDEM AO TIPO DE QUARTO DA RESERVA QUE PRETENDEMOS
    -- VERIFICAR
    OPEN C_QUARTOS FOR
        SELECT Q.ID
        FROM QUARTO Q
        WHERE Q.ID_TIPO_QUARTO = P_TIPOQUARTO;

    -- COLOCA NO CURSOR TODAS AS RESERVAS EM QUE SE VERIFIQUE QUE O SEU TIPO DE QUARTO Ã‰ DO TIPO DA RESERVA QUE
    -- QUEREMOS E:
    -- A P_DATA ESTA ENTRE R.DATAINICIO E R.DATAFIM
    -- A P_DATA+P_DURACAO (DATA DE SAIDA DA RESERVA A MARCAR) ESTA ENTRE R.DATAINICIO E R.DATAFIM
    -- A R.DATAINICIO OU R.DATAFIM ESTA NO PERIODO DA RESERVA A MARCAR
    OPEN C_RESERVAS FOR
        SELECT R.ID
        FROM RESERVA R
        WHERE (R.ID_TIPO_QUARTO = P_TIPOQUARTO)
          AND ((P_DATA BETWEEN R.DATA_ENTRADA AND R.DATA_SAIDA)
            OR ((P_DATA + P_DURACAO) BETWEEN R.DATA_ENTRADA AND R.DATA_SAIDA)
            OR (R.DATA_ENTRADA BETWEEN P_DATA AND (P_DATA + P_DURACAO))
            OR (R.DATA_SAIDA BETWEEN P_DATA AND (P_DATA + P_DURACAO)));

    -- VAI ITERAR O CURSOR COM OS QUARTOS E VERIFICAR SE O QUARTO ESTA DISPONIVEL NA DATA PRETENDIDA, CASO ESTEJA
    -- AUMENTA O CONTADOR DO NUM DE QUARTOS
    LOOP
        FETCH C_QUARTOS INTO AUX_ID_QUARTO_POSSIVEL;

        AUX_LOOP := 0;

        FOR I IN 0..P_DURACAO
            LOOP
                IF ISQUARTOINDISPONIVEL(AUX_ID_QUARTO_POSSIVEL, P_DATA + I) THEN
                    AUX_LOOP := 1;
                END IF;
            END LOOP;

        IF AUX_LOOP = 0 THEN
            AUX_QUARTOS := AUX_QUARTOS + 1;
        END IF;

        EXIT WHEN C_QUARTOS%NOTFOUND;
    END LOOP;

    -- VAI ITERAR O CONTADOR DAS RESERVAS QUE SE SOBREPOEM COM O TIPO DE QUARTO QUE QUEREMOS E VAI AUMENTAR O
    -- CONTADOR DE AUX_RESERVAS
    LOOP
        FETCH C_RESERVAS INTO AUX_ID_RESERVA_ITERAR;
        IF (AUX_ID_RESERVA_ITERAR > 0) THEN
            AUX_RESERVAS := AUX_RESERVAS + 1;
        END IF;
        EXIT WHEN C_QUARTOS%NOTFOUND;
    END LOOP;

    -- CASO HAJA MAIS QUARTOS DISPONIVEIS QUE RESERVAS SOBREPOSTAS A RESERVA QUE QUEREMOS FAZER E POSSIVEL SENAO
    -- RETORNA FALSE
    IF AUX_QUARTOS > AUX_RESERVAS THEN
        DBMS_OUTPUT.PUT_LINE('RESERVA POSSIVEL' || ' - ' || AUX_QUARTOS || ' - ' || AUX_RESERVAS);
        RETURN TRUE;
    ELSE
        DBMS_OUTPUT.PUT_LINE('RESERVA IMPOSSIVEL' || ' - ' || AUX_QUARTOS || ' - ' || AUX_RESERVAS);
        RETURN FALSE;
    END IF;

EXCEPTION
    WHEN
        TIPOQUARTO_INVALIDO THEN
        DBMS_OUTPUT.PUT_LINE('TIPO DE QUARTO PARA A RESERVA NAO EXISTENTE');
        RETURN NULL;
    WHEN
        DATA_INVALIDA THEN
        DBMS_OUTPUT.PUT_LINE('DATA DA RESERVA INVALIDA');
        RETURN NULL;
    WHEN
        DURACAO_INVALIDA THEN
        DBMS_OUTPUT.PUT_LINE('DURACAO DA RESERVA INVALIDA');
        RETURN NULL;
    WHEN
        NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('PARAMETRO(S) NULO(S)');
        RETURN NULL;
END;

-- TEST
DECLARE
    AUX BOOLEAN;
BEGIN
    AUX := FNCDISPONIBILIDADERESERVA(1, TO_DATE('2020-11-29', 'yyyy-mm-dd'), 1, NULL);
    AUX := FNCDISPONIBILIDADERESERVA(10, TO_DATE('2020-11-29', 'yyyy-mm-dd'), 1, NULL);
    AUX := FNCDISPONIBILIDADERESERVA(1, TO_DATE('2020-11-29', 'yyyy-mm-dd'), -5, NULL);
    AUX := FNCDISPONIBILIDADERESERVA(NULL, NULL, NULL, NULL);
    AUX := FNCDISPONIBILIDADERESERVA(2, SYSDATE + 10, 5, NULL);
END;